#import "directive.graphql"

type Category {
  id: ID!
  categoryName: String!
}

input NewCategory {
  eventId: ID! @goTag(key: "validate", value: "required")
  categoryName: String! @goTag(key: "validate", value: "required")
}

input UpdateCategory {
  id: ID! @goTag(key: "validate", value: "required")
  eventId: ID! @goTag(key: "validate", value: "required")
  categoryName: String @goTag(key: "validate", value: "required")
}

input DeleteCategory {
  eventId: ID! @goTag(key: "validate", value: "required")
  id: ID! @goTag(key: "validate", value: "required")
}

extend type Mutation {
  createCategory(input: NewCategory!): Category! @CheckUserIdExists
  updateCategory(input: UpdateCategory!): String @CheckUserIdExists
  deleteCategory(input: DeleteCategory!): String @CheckUserIdExists
}
