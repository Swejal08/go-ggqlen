#import "directive.graphql"
#import "sessions.graphql"

type Event {
  id: ID!
  name: String!
  description: String!
  location: String!
}

type EventDetails {
  id: ID!
  name: String!
  description: String!
  location: String!
  sessions: [Session!]!
}

input NewEvent {
  userId: ID! @goTag(key: "validate", value: "required")
  name: String! @goTag(key: "validate", value: "required")
  description: String! @goTag(key: "validate", value: "required")
  location: String! @goTag(key: "validate", value: "required")
}

input UpdateEvent {
  userId: ID! @goTag(key: "validate", value: "required")
  id: ID! @goTag(key: "validate", value: "required")
  name: String
  description: String
  location: String
}

input DeleteEvent {
  userId: ID! @goTag(key: "validate", value: "required")
  id: ID! @goTag(key: "validate", value: "required")
}

type Query {
  events(userId: ID!): [Event!]!
  eventDetails(userId: ID!, eventId: ID!): EventDetails
}

type Mutation {
  createEvent(input: NewEvent!): Event!
  updateEvent(input: UpdateEvent!): String
  deleteEvent(input: DeleteEvent!): String
}
