#import "event.graphql"
#import "user.graphql"
#import "directive.graphql"

enum Role {
  contributor
  admin
  attendee
}

type EventMembership {
  id: ID!
  eventId: Int!
  userId: Int!
  role: Role!
}

input AssignEventMembership {
  eventId: Int! @goTag(key: "validate", value: "required")
  userId: Int! @goTag(key: "validate", value: "required")
  role: Role! @goTag(key: "validate", value: "required")
}

input RemoveEventMembership {
  eventId: Int! @goTag(key: "validate", value: "required")
  userId: Int! @goTag(key: "validate", value: "required")
}

extend type Mutation {
  assignEventMembership(input: AssignEventMembership!): String
    @CheckUserIdExists
  removeEventMembership(input: RemoveEventMembership!): String
    @CheckUserIdExists
}
