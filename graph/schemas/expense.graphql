#import "event.graphql"

type Expense {
  id: ID!
  eventId: Int!
  itemName: String!
  cost: Int!
  description: String
  categoryId: Category
}

type CategoryExpense {
  id: ID!
  name: String!
  expense: Int!
}

type TotalExpense {
  totalExpense: Int!
  name: String!
  category: [CategoryExpense]!
}

input NewExpense {
  eventId: Int!
  itemName: String!
  cost: Int!
  description: String
  categoryId: Int!
}

input UpdateExpense {
  id: ID!
  eventId: Int!
  itemName: String
  cost: Int
  description: String
  categoryId: Int
}

input DeleteExpense {
  id: ID!
  eventId: Int!
}

extend type Query {
  totalExpense(eventId: Int!): TotalExpense
}

extend type Mutation {
  createExpense(input: NewExpense!): Expense!
  updateExpense(input: UpdateExpense!): String
  deleteExpense(input: DeleteExpense!): String
}
