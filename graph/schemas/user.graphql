#import "directive.graphql"
#import "eventMembership.graphql"

type User {
  id: ID!
  name: String!
  email: String!
  phone: String
  password: String
}

type UserDetails {
  id: ID!
  name: String!
  email: String!
  phone: String!
  role: Role!
}

input NewUser {
  name: String! @goTag(key: "validate", value: "required")
  email: String! @goTag(key: "validate", value: "required,email")
  phone: String
  password: String!
}

extend type Query {
  me: User @Authenticate @Authenticate
  nonEventMembers(eventId: ID!): [User]! @Authenticate
  userDetails(userId: ID!, eventId: ID!): UserDetails! @Authenticate
}

extend type Mutation {
  createUser(input: NewUser!): User! @Authenticate
}
